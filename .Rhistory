)))))
}else if(unit == 'acre'){
yield_level <- ifelse( FCY_acre == "0-3 t/acre","a low yield level",
ifelse( FCY_acre == "3-6 t/acre","a normal yield level",
ifelse( FCY_acre == "6-9 t/acre","a medium yield level",
ifelse( FCY_acre == "9-12 t/acre","a high yield level",
ifelse( FCY_acre == ">12 t/acre","a very high yield level")
))))
}
print(yield_level)
reg_ghana
reg_ghana <- "Ahafo"
lgaGroups <- "Ahafo"
lgaGroups2 <- "Ahafo"
#define the yield category
if (unit == "ha"){
FCY <- FCY_ha
if(FCY == "7.5-15 t/ha" ){
ds=FR_GH_FCY2_plm
} else if(FCY == "0-7.5 t/ha" ){
ds=FR_GH_FCY1_plm
}else if(FCY == "15-22.5 t/ha" ){
ds=FR_GH_FCY3_plm
}else if(FCY == "22.5-30 t/ha" ){
ds <- FR_GH_FCY4_plm
}else if(FCY == ">30 t/ha" ){
ds <- FR_GH_FCY5_plm
}
}else if(unit == "acre"){
FCY <- FCY_acre
if(FCY == "3-6 t/acre" ){
ds=FR_GH_FCY2_plm
} else if(FCY == "0-3 t/acre"  ){
ds=FR_GH_FCY1_plm
}else if(FCY == "6-9 t/acre" ){
ds=FR_GH_FCY3_plm
}else if(FCY == "9-12 t/acre" ){
ds <- FR_GH_FCY4_plm
}else if(FCY == ">30 t/acre" ){
ds <- FR_GH_FCY5_plm
}
}
Savannah <- droplevels(ds[ds$Regions %in% c("Savannah"), ])
Savannahlabel <-  data.frame(Regions= c("Savannah"), lon=c(-0.75), lat=c(9.5))
Bono_East <- droplevels(ds[ds$Regions %in% c("Bono East"), ])
Bono_Eastlabel <- data.frame(Regions= c("Bono East"), lon=c(-0.65), lat=c(8.5))
Bono <- droplevels(ds[ds$Regions %in% c("Bono"), ])
Bonolabel <- data.frame(Regions= c("Brong Ahafo"), lon=c(-2.5), lat=c(8.68))
Central <- droplevels(ds[ds$Regions %in% c("Central"), ])
Centrallabel <- data.frame(Regions= c("Central"), lon=c(-1.0), lat=c( 6.1))
Ashanti <- droplevels(ds[ds$Regions %in% c("Ashanti"), ])
Ashantilabel <- data.frame(Regions= c("Ashanti"), lon=c(-2.5), lat=c(7.53))
Ahafo <- droplevels(ds[ds$Regions %in% c("Ahafo"), ])
Ahafolabel <- data.frame(Regions= c("Ahafo"), lon=c(-2.8), lat=c(6.5))
Eastern <- droplevels(ds[ds$Regions %in% c("Eastern"), ])
Eastlabel <- data.frame(Regions= c("Eastern"), lon=c(-0.8), lat=c(7.21))
Volta <- droplevels(ds[ds$Regions %in% c("Volta"), ])
Voltalabel <- data.frame(Regions= c("Volta"), lon=c(0.7), lat=c(7.3))
Savannahcity <- data.frame(Regions = c("Savannah"),name=c("Damongo"), lat=c(9.08), lon = c(-1.82))
Centralcity <- data.frame(Regions = c("Central"),name=c("Cape Coast"), lat=c(5.12), lon = c(-1.27))
Bonocity <- data.frame(Regions = c("Brong Ahafo"), name=c("Sunyani"),
lat=c(7.34), lon = c(-2.32))
Bono_Eastcity <- data.frame(Regions = c("Bono East"), name=c("Techiman"),
lat=c(7.58), lon = c(-1.93))
Ashanti_city <- data.frame(Regions = c("Ashanti"), name=c("Kumasi"),
lat=c(6.68), lon = c(-1.63))
Ahafocity <- data.frame(Regions = c("Ahafo"), name=c("Goaso"),
lat=c(6.8), lon = c(-2.52))
Eastcity <- data.frame(Regions = c("Eastern"),name=c("Koforidua"),
lat=c(6.1), lon = c(-0.26))
Voltacity <- data.frame(Regions = c("Volta"),name=c("Ho"),
lat=c(6.6), lon = c(0.47))
if(lgaGroups =="Ashanti"){
LGApoints <- Ashanti
RegionsLabel <- Ashantilabel
textangle<-0
cities = c("Ashanti_city")
couple <- "Two"
}else if(lgaGroups =="Bono"){
LGApoints <- Bono
RegionsLabel <- Bonolabel
textangle<-0
cities = c("Bonocity")
couple <- "Two"
}else if(lgaGroups =="Bono East"){
LGApoints <- Bono_East
RegionsLabel <- Bono_Eastlabel
textangle<-0
cities = c("Bono_Eastcity")
couple <- "Two"
}else if(lgaGroups =="Savannah"){
LGApoints <- Savannah
RegionsLabel <- Savannahlabel
textangle<-0
cities = c("Savannahcity")
couple <- "Two"
}else if(lgaGroups =="Ahafo"){
LGApoints <- Ahafo
RegionsLabel <- Ahafolabel
textangle<-0
cities = c("Ahafocity")
couple <- "Two"
}else if(lgaGroups =="Central"){
LGApoints <- Central
RegionsLabel <- Centrallabel
textangle<-0
cities = c("Centralcity")
couple <- "Two"
}else if(lgaGroups =="Volta"){
LGApoints <- Volta
RegionsLabel <- Voltalabel
textangle<-0
cities = c("Voltacity")
couple <- "Two"
}else if(lgaGroups =="Eastern"){
LGApoints <- Eastern
RegionsLabel <- Eastlabel
textangle<-0
cities = c("Eastcity")
couple <- "Two"
}
plotData <- droplevels(LGApoints[LGApoints$plm == plantMonth & LGApoints$Regions %in% lgaGroups , ])
AOI <- lgaGroups
AOIMapS <- subset(boundaryGH, ADM1_EN %in% AOI )
AOIMap <- subset(ghRegions, ADM1_EN %in% AOI )
AOIMap <- AOIMap[,c("ADM1_EN", "ADM2_EN")]
LGAnames <- as.data.frame(AOIMap)
LGAnames <- cbind(LGAnames, coordinates(AOIMap))
colnames(LGAnames) <- c("REGION","DISTRICT","long","lat")
crop_ghRegions <- subset(ghRegions, ADM1_EN %in% AOI )
## take REGION average
LGAaverage <- ddply(plotData, .(Districts, Regions), summarize,
LGAUrea = round(mean(Urea), digits=0),
LGANPK112221 = round(mean(NPK112221 ), digits=0),
LGANPK251010= round(mean(NPK251010), digits=0),
LGANPK152020 = round(mean(NPK152020), digits=0),
LGANPK123017 = round(mean(NPK123017), digits=0),
LGAdY = round(mean(respY), digits=0))
LGAaverage$LGAUrea <- ifelse(LGAaverage$LGAUrea <25, 0, LGAaverage$LGAUrea)
LGAaverage$LGANPK112221 <- ifelse(LGAaverage$LGANPK112221 <25, 0, LGAaverage$LGANPK112221)
LGAaverage$LGANPK251010 <- ifelse(LGAaverage$LGANPK251010 <25, 0, LGAaverage$LGANPK251010)
LGAaverage$LGANPK152020 <- ifelse(LGAaverage$LGANPK152020 <25, 0, LGAaverage$LGANPK152020)
LGAaverage$LGANPK123017 <- ifelse(LGAaverage$LGANPK123017 <25, 0, LGAaverage$LGANPK123017)
plantMonth <- "January"
plotData <- droplevels(LGApoints[LGApoints$plm == plantMonth & LGApoints$Regions %in% lgaGroups , ])
AOI <- lgaGroups
AOIMapS <- subset(boundaryGH, ADM1_EN %in% AOI )
AOIMap <- subset(ghRegions, ADM1_EN %in% AOI )
AOIMap <- AOIMap[,c("ADM1_EN", "ADM2_EN")]
LGAnames <- as.data.frame(AOIMap)
LGAnames <- cbind(LGAnames, coordinates(AOIMap))
colnames(LGAnames) <- c("REGION","DISTRICT","long","lat")
crop_ghRegions <- subset(ghRegions, ADM1_EN %in% AOI )
## take REGION average
LGAaverage <- ddply(plotData, .(Districts, Regions), summarize,
LGAUrea = round(mean(Urea), digits=0),
LGANPK112221 = round(mean(NPK112221 ), digits=0),
LGANPK251010= round(mean(NPK251010), digits=0),
LGANPK152020 = round(mean(NPK152020), digits=0),
LGANPK123017 = round(mean(NPK123017), digits=0),
LGAdY = round(mean(respY), digits=0))
LGAaverage$LGAUrea <- ifelse(LGAaverage$LGAUrea <25, 0, LGAaverage$LGAUrea)
LGAaverage$LGANPK112221 <- ifelse(LGAaverage$LGANPK112221 <25, 0, LGAaverage$LGANPK112221)
LGAaverage$LGANPK251010 <- ifelse(LGAaverage$LGANPK251010 <25, 0, LGAaverage$LGANPK251010)
LGAaverage$LGANPK152020 <- ifelse(LGAaverage$LGANPK152020 <25, 0, LGAaverage$LGANPK152020)
LGAaverage$LGANPK123017 <- ifelse(LGAaverage$LGANPK123017 <25, 0, LGAaverage$LGANPK123017)
if(unit == 'acre'){
dss <- LGAaverage
dss$LGAUrea <- dss$LGAUrea / 2.47105
dss$LGANPK112221 <- dss$LGANPK112221 / 2.47105
dss$LGANPK251010 <- dss$LGANPK251010 / 2.47105
dss$LGANPK152020 <- dss$LGANPK152020 / 2.47105
dss$LGANPK123017 <- dss$LGANPK123017 / 2.47105
dss$LGAdY <- dss$LGAdY / 2.47105
LGAaverage <- dss
}
plotData <- merge(plotData, LGAaverage, by=c("Districts", "Regions"))
if(unit == "ha"){
plotData$Urea <- round(plotData$LGAUrea/50)*50
plotData$NPK112221 <- round(plotData$LGANPK112221/50)*50
plotData$NPK251010 <- round(plotData$LGANPK251010 /25)*25
plotData$NPK152020 <- round(plotData$LGANPK152020/50)*50
plotData$NPK123017 <- round(plotData$LGANPK123017 /25)*25
plotData$dY <- round(plotData$LGAdY/2)*2
}else{
plotData$Urea <- round(plotData$LGAUrea/10)*10
plotData$NPK112221 <- round(plotData$LGANPK112221/10)*10
plotData$NPK251010 <- round(plotData$LGANPK251010 /10)*10
plotData$NPK152020 <- round(plotData$LGANPK152020/10)*10
plotData$NPK123017 <- round(plotData$LGANPK123017 /10)*10
plotData$dY <- round(plotData$LGAdY/1)*1
}
fileNameCsv <- paste(plantMonth, "_", paste(lgaGroups, collapse="_"), ".csv", sep="")
AOIMap2 <- merge(AOIMap, unique(plotData[, c("Regions","Districts", "Urea",  "NPK152020", "NPK123017","dY", "LGAdY")]),
by.x=c("ADM1_EN","ADM2_EN") ,by.y=c("Regions","Districts"))
AOIMap2$month <- plantMonth
AOIMap2 <- AOIMap2[!is.na(AOIMap2$Urea), ]
plotData$month <- plantMonth
Currency <- "GHC"
tt_gh <- unique(as.data.frame(plotData[, c("Regions","Districts", "Urea",  "NPK152020", "NPK123017", "LGAdY", "month")]))
tt_gh$LGAdY <- round(tt_gh$LGAdY, digits = 1)
tt_gh2 <- dplyr::select(tt_gh, c("Regions","Districts", "Urea",  "NPK152020", "NPK123017", "LGAdY"))
colnames(tt_gh2) <- c("Regions","Districts", "Recommended urea rate",  "NPK15_20_20 rate","NPK12_30_17 rate",
"Expected yield response"
)
#MEKLIT HERE
tt_merge_gh$totalSalePrice = as.numeric(tt_merge_gh$LGAdY)  * as.numeric(tt_merge_gh$CassavaPrice)
tt_merge_gh$totalCost = (as.numeric(tt_merge_gh$UreaPrice)/50 * as.numeric(tt_merge_gh$Urea)) +
(as.numeric(tt_merge_gh$NPK1520207Price)/50 * as.numeric(tt_merge_gh$NPK152020))+
(as.numeric(tt_merge_gh$NPK123017Price)/50 * as.numeric(tt_merge_gh$NPK123017))
#tt_merge$NetRevenue = tt_merge$totalSalePrice - tt_merge$totalCost
#totalCost = (as.numeric(UreaPrice)/50 * 15) + (as.numeric(NPK151515Price)/50 * 300)
tt_merge_gh$NetRevenue = as.numeric(tt_merge_gh$totalSalePrice) - as.numeric(tt_merge_gh$totalCost)
tt_merge_gh2 <- dplyr::select(tt_merge_gh, c(Regions, Districts, Urea,NPK152020,NPK123017,  LGAdY, CassavaPrice, totalSalePrice, totalCost, NetRevenue))
colnames(tt_merge_gh2) <- c("Regions","Districts", "Urea (kg/ha)", "NPK 12:30:17 (kg/ha)","NPK 25:10:10 (kg/ha)",
"Expected yield increase (t)",  "Cassava Price",  "Total sale (GHC)", "Fertilizer cost (GHC)", "Profit (GHC)")
write.csv(tt_merge_gh2, fileNameCsv, row.names = FALSE)
AOIMap3 <- st_as_sf(AOIMap2)
AOIMap3 <- st_as_sf(AOIMap2)
# --------------------------------------------------------------------------
#side by side maps
# --------------------------------------------------------------------------
AOIMap3 <- st_as_sf(AOIMap2)
#reactive  title based on unit of land
tturea <- reactive({
if(unit == "ha"){
tturea <- paste("Recommended urea rate(kg/ha)")
}else {
tturea <- paste("Recommended urea rate(kg/acre)")
}
})
ureasclae <- unique(AOIMap3$Urea)
keU <- as.character(ureasclae[order(ureasclae)])
AOIMap3$Urea <- factor(AOIMap3$Urea)
levels(AOIMap3$Urea) <- keU
require(ggrepel)
library(tmap)
sm1 = tm_shape(AOIMap3) +
tm_polygons(
col = "Urea",
title = tturea,
palette = "Greens")+
tm_text(text = "ADM2_EN")
sm1
sm1 = tm_shape(AOIMap3) +
tm_polygons(
col = "Urea",
title = tturea,
palette = "Greens")+
tm_text(text = "ADM2_EN")
sm1
AOIMap3
sm1 = tm_shape(AOIMap3) +
tm_polygons(
col = "Urea",
title = tturea,
palette = "Greens")+
tm_text(text = "ADM2_EN")
sm1
ttnpk12 <- reactive({
if(unit == "ha"){
ttnpk12 <- paste("Recommended NPK 12:30:17 rate (kg/ha)")
}else {
ttnpk12 <- paste("Recommended NPK 12:30:17 rate(kg/acre)")
}
})
#NPK 12:30:17 plot
npk12 <- unique(AOIMap3$NPK123017)
kev <- as.character(npk12[order(npk12)])
AOIMap3$NPK123017 <- factor(AOIMap3$NPK123017)
levels(AOIMap3$NPK123017) <- kev
nm4 = tm_shape(AOIMap3) +
tm_polygons(
col = "NPK123017",
title = ttnpk12,
palette = "YlGnBu")+
tm_text(text = "ADM1_EN")
nm4
tturea
tturea <- paste("Recommended urea rate(kg/ha)")
sm1 = tm_shape(AOIMap3) +
tm_polygons(
col = "Urea",
title = tturea,
palette = "Greens")+
tm_text(text = "ADM2_EN")
sm1
#tm_text(text = "ADM2_EN")
sm1
output$ureaplot2 <- renderTmap({
sm1 = tm_shape(AOIMap3) +
tm_polygons(
col = "Urea",
title = tturea,
palette = "Greens")
#tm_text(text = "ADM2_EN")
sm1
})
sm1 = tm_shape(AOIMap3) +
tm_polygons(
col = "Urea",
title = tturea,
palette = "Greens")
#tm_text(text = "ADM2_EN")
sm1
runApp()
AOIMap3
sm4 = tm_shape(AOIMap3) +
tm_polygons(
col = NPK123017,
title = ttnpk12(),
palette = "YlGnBu")
sm4 = tm_shape(AOIMap3) +
tm_polygons(
col = NPK123017,
title = ttnpk12,
palette = "YlGnBu")
sm4 = tm_shape(AOIMap3) +
tm_polygons(
col = AOIMap3$NPK123017,
title = ttnpk12,
palette = "YlGnBu")
sm4
sm4 = tm_shape(AOIMap3) +
tm_polygons(
col = "NPK123017",
title.col="Continent",
title = ttnpk12(),
palette = "YlGnBu")
sm4 = tm_shape(AOIMap3) +
tm_polygons(
col = "NPK123017",
title.col="Continent",
title = ttnpk12,
palette = "YlGnBu")
sm4
runApp()
AOIMap3
sm4 = tm_shape(AOIMap3) +
tm_polygons(
col = "NPK123017",
title.col="ADM2_EN",
title = ttnpk12,
palette = "YlGnBu")
sm4
sm4 = tm_shape(AOIMap3) +
tm_polygons(
col = "NPK123017",
title.color="ADM2_EN",
title = ttnpk12,
palette = "YlGnBu")
sm4
# NOT RUN {
data(World, land)
tm_shape(World) +
tm_fill("pop_est_dens", style="kmeans", title="Population density") +
tm_style("albatross", frame.lwd=10) + tm_format("World", title="The World")
# }
# NOT RUN {
tm_shape(land) +
tm_raster("elevation", breaks=c(-Inf, 250, 500, 1000, 1500, 2000, 2500, 3000, 4000, Inf),
palette = terrain.colors(9), title="Elevation", midpoint = NA) +
tm_shape(World, is.master=TRUE, projection = "+proj=eck4") +
tm_borders("grey20") +
tm_graticules(labels.size = .5) +
tm_text("name", size="AREA") +
tm_compass(position = c(.65, .15), color.light = "grey90") +
tm_credits("Eckert IV projection", position = c("right", "BOTTOM")) +
tm_style("classic") +
tm_layout(bg.color="lightblue",
inner.margins=c(.04,.03, .02, .01),
earth.boundary = TRUE,
space.color="grey90") +
tm_legend(position = c("left", "bottom"),
frame = TRUE,
bg.color="lightblue")
tm_shape(World, projection="+proj=robin") +
tm_polygons("HPI", palette="div", n=7,
title = "Happy Planet Index") +
tm_credits("Robinson projection", position = c("right", "BOTTOM")) +
tm_style("natural", earth.boundary = c(-180, -87, 180, 87), inner.margins = .05) +
tm_legend(position=c("left", "bottom"), bg.color="grey95", frame=TRUE)
# Example to illustrate the type of titles
tm_shape(World) +
tm_polygons(c("income_grp", "economy"), title = c("Legend Title 1", "Legend Title 2")) +
tm_layout(main.title = "Main Title",
main.title.position = "center",
main.title.color = "blue",
title = c("Title 1", "Title 2"),
title.color = "red",
panel.labels = c("Panel Label 1", "Panel Label 2"),
panel.label.color = "purple",
legend.text.color = "brown")
sm4 = tm_shape(AOIMap3) +
tm_polygons(
col = "NPK123017",
id="ADM2_EN",
title = ttnpk12,
palette = "YlGnBu")
sm4
ttnpk12 <- paste("Recommended NPK 12:30:17 rate (kg/ha)")
sm4 = tm_shape(AOIMap3) +
tm_polygons(
col = "NPK123017",
title.col="ADM2_EN",
title = ttnpk12,
palette = "YlGnBu")
sm4
runApp()
AOIMap3
runApp()
runApp()
runApp()
AOIMap3
names(AOIMap3)
# #-------------------------------------------------------------------------
# #front page dynamic tmap
# #-------------------------------------------------------------------------
#
AA <- AOIMap3
colnames(AA) <- c("ADM1_EN", "ADM2_EN", "Urea", "NPK152020", "NPK", "dY", "LGAdY",     "month",     "geometry" )
sm1 = tm_shape(AA) +
tm_polygons(
col = "Urea",
title = tturea(),
palette = "Greens")+
tm_text(text = "ADM2_EN")
sm1
sm4 = tm_shape(AA) +
tm_polygons(
col = "NPK123017",
id="ADM2_EN",
title = ttnpk12(),
palette = "YlGnBu")
ttnpk12 <- paste("Recommended NPK 12:30:17 rate (kg/ha)")
sm4 = tm_shape(AA) +
tm_polygons(
col = "NPK123017",
id="ADM2_EN",
title = ttnpk12,
palette = "YlGnBu")
sm4
sm4 = tm_shape(AA) +
tm_polygons(
col = "NPK",
id="ADM2_EN",
title = ttnpk12,
palette = "YlGnBu")
sm4
runApp()
library(tmap)
library(leaflet)
data(Europe)
tmap_mode("view")
carte <- tm_shape(Europe) +
tm_borders(alpha = 0.5) +
tm_fill(col = "well_being",
id = "name",
popup.vars = c("life_exp","well_being"))
tmap_leaflet(carte)
sm4 = tm_shape(AOIMap3) +
tm_polygons(
col = "NPK123017",
id="ADM2_EN",
title = ttnpk12(),
palette = "YlGnBu",
popup.vars=c("Population (2010)"="NPK123017"),
popup.format=list(growth=list(digits=4)))
sm4 = tm_shape(AOIMap3) +
tm_polygons(
col = "NPK123017",
id="ADM2_EN",
title = ttnpk12,
palette = "YlGnBu",
popup.vars=c("Population (2010)"="NPK123017"),
popup.format=list(growth=list(digits=4)))
sm4
sm4 = tm_shape(AOIMap3) +
tm_polygons(
col = "NPK123017",
id="ADM2_EN",
title = ttnpk12,
palette = "YlGnBu",
popup.vars=c("Population (2010)"="NPK123017")
)
sm4
runApp()
runApp()
runApp()
runApp()
runApp()
nm4 = tm_shape(AOIMap3) +
tm_polygons(
col = "NPK123017",
title = ttnpk12,
palette = "YlGnBu",
id="ADM2_EN",
popup.vars=c("NPK 12:30:17 rate : "="NPK123017")
)+
tm_text(text = "NAME_2")
nm4
nm4 = tm_shape(AOIMap3) +
tm_polygons(
col = "NPK123017",
title = ttnpk12,
palette = "YlGnBu",
id="ADM2_EN",
popup.vars=c("NPK 12:30:17 rate : "="NPK123017")
)+
tm_text(text = "ADM2_EN")
nm4
runApp()
